name: Build TF

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: ['0.26.1', '3.7.2'] # ['5.3.0', '5.2.0', '4.2.2', '3.7.2']
      fail-fast: true
    steps:
      - name: List information
        run: ls /usr/local/bin

      - uses: actions/checkout@v3

      - name: Install Bazel
        run: |
          # sudo ln -sf $PWD/output/bazel /usr/local/bin/bazel
          ls -l /usr/local/bin/bazel
          # cat /usr/local/bin/bazel
          echo 0.26.1>.bazelversion
          bazel --version

      - name: Setup for tf
        run: |
          sudo apt-get install -y libhdf5-dev libc-ares-dev libeigen3-dev libatlas-base-dev libopenblas-dev
          sudo pip3 install keras_applications==1.0.8 --no-deps
          sudo pip3 install keras_preprocessing==1.1.0 --no-deps
          sudo pip3 install h5py==2.9.0
          sudo apt-get install -y openmpi-bin libopenmpi-dev
          sudo -H pip3 install -U --user six numpy wheel mock

      - name: Clone Tensorflow
        run: |
          git clone -b v1.15.0 https://github.com/tensorflow/tensorflow.git
          cd tensorflow
          echo 0.26.1>.bazelversion
          git checkout -b v1.15.0
          cd ..
      - name: Configure
        run: |
          cd tensorflow
          ./configure
          cd ..
      - name: Build
        run: |
          cd tensorflow
          sudo bazel build \
          --config=opt \
          --config=noaws \
          --config=nogcp \
          --config=nohdfs \
          --config=noignite \
          --config=nokafka \
          --config=nonccl \
          --local_resources=1024.0,0.5,0.5 \
          --copt=-mfpu=neon-vfpv4 \
          --copt=-ftree-vectorize \
          --copt=-funsafe-math-optimizations \
          --copt=-ftree-loop-vectorize \
          --copt=-fomit-frame-pointer \
          --copt=-DRASPBERRY_PI \
          --host_copt=-DRASPBERRY_PI //tensorflow/tools/pip_package:build_pip_package
          cd ..
