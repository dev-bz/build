name: CI

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: bazel
          release_name: Release bazel
          draft: false
          prerelease: false
      - name:
        run: echo ${{ steps.create_release.outputs.upload_url }}
  test:
    if: false
    runs-on: ubuntu-latest
    needs: [ release ]
    strategy:
      matrix:
        version: ['0.26.1', '5.3.0', '5.2.0', '4.2.2', '3.7.2']
        tool: ['8', '11']
      fail-fast: false
    steps:
      - name: Zip
        run: |
          echo ${{ needs.release.outputs.url }}
          echo Test > README.md
          zip bazel-${{ matrix.version }}-${{ matrix.tool }}.zip README.md
      - name: Upload Release Asset
        if: false
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.url }}
          asset_path: ./bazel-${{ matrix.version }}-${{ matrix.tool }}.zip
          asset_name: bazel-${{ matrix.version }}-${{ matrix.tool }}.zip
          asset_content_type: application/zip


  build:
    # if: false
    runs-on: ubuntu-latest
    needs: [ release ]
    strategy:
      matrix:
        version: ['0.26.1', '5.3.0', '5.2.0', '4.2.2', '3.7.2']
        tool: ['8', '11']
      fail-fast: false
    steps:
      - uses: actions/setup-java@v3
        if: ${{ matrix.tool != '11' }}
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: ${{ matrix.tool }}
      - name: Check version
        run: |
          python -V
          clang -v
      #    java --version
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Download source
        run: wget -q https://github.com/bazelbuild/bazel/releases/download/${{ matrix.version }}/bazel-${{ matrix.version }}-dist.zip
      - name: Unzip source
        run: unzip -nq bazel-${{ matrix.version }}-dist.zip
      - name: Post information
        run: ls
      - name: Compile
        run: env EXTRA_BAZEL__ARGS="--tool_java_runtime_version=local_jdk" bash ./compile.sh
      - name: Show output
        run: |
          ls output
          if [ ! -e output/bazel ]; then exit 1; fi

      - name: Zip packages
        run: zip bazel-${{ matrix.version }}-${{ matrix.tool }}.zip output/bazel

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.url }}
          asset_path: ./bazel-${{ matrix.version }}-${{ matrix.tool }}.zip
          asset_name: bazel-${{ matrix.version }}-${{ matrix.tool }}.zip
          asset_content_type: application/zip

